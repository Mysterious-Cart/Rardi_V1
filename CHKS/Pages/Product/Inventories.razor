@page "/inventories"

@attribute [Authorize]
@using System.Globalization
@using Pages.Component;

@namespace CHKS.Pages

<PageTitle>Inventories</PageTitle>
<MudPaper>

<MudToolBar Style="width:100%; margin-bottom:10px; padding:10px" Gutters=false>
        <MudTextField 
                Style="height:40px"
                Adornment="Adornment.Start"
                AdornmentIcon="@Icons.Material.Filled.Search"
                Placeholder="Type to search" 
                Variant="MudBlazor.Variant.Outlined"
                InputMode="InputMode.search" InputType="InputType.Text" 
                FullWidth AutoFocus AutoGrow 
                ValueChanged=@(args => Search(args))/>
        <MudSpacer />
</MudToolBar>


<MudDataGrid 
    T="Inventory" 
    Items="@inventories" 
    Elevation="0"
    Virtualize=true
    Height="93dvh"
    EditMode="@MudBlazor.DataGridEditMode.Form"
    EditTrigger="@DataGridEditTrigger.OnRowClick"
    Context="product"   
    >

    <Columns>
        <HierarchyColumn T="@Inventory"/>
        <PropertyColumn Property="i => i.Name" CellStyle="width:40%" />
        <PropertyColumn Property=@(i => i.Stock.ToString("0")) CellStyle="width:10%"/>
        <TemplateColumn title="Demand">
            <CellTemplate>
                <MudChip 
                    Text="Decent" 
                    Icon="@Icons.Material.Filled.ArrowUpward"
                    Color="Color.Primary" 
                    Variant="MudBlazor.Variant.Text" 
                    Size="MudBlazor.Size.Small"/>
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property=@(i => i.Import.ToString("$0.00")) CellStyle="width: 10%;"/>
        <PropertyColumn Property=@(i => i.Export.ToString("$0.00")) CellStyle="width: 20%;"/>
        <TemplateColumn title="State" Context="CurrentProduct">
            <CellTemplate>
                @if((ProductStatus)CurrentProduct.Item.Status == ProductStatus.Active){
                    <MudChip Text="Active" Icon="@Icons.Material.Filled.Check" 
                        Color="Color.Success" Variant="MudBlazor.Variant.Filled" 
                        Size="MudBlazor.Size.Small"/>
                }
            </CellTemplate>
        </TemplateColumn>
    </Columns>

    <ChildRowContent>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@product.Item.Name</MudText>
                    <MudText Typo="Typo.caption" Style="color:lightgray"> @product.Item.Id</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent style="display:flex; justify-content:space-evenly">
                <MudContainer MaxWidth="MaxWidth.ExtraSmall" Style="max-width:300px">
                    <MudChart ChartType="ChartType.Donut"
                            LegendPosition="Position.Right"
                            Width="150px"
                            Height="150px"
                            InputLabels=@(new List<string>{"Stock"}.ToArray())
                            InputData="@(new List<double>{(double)product.Item.Stock}.ToArray())" />
                </MudContainer>
                <MudContainer>
                    <MudChart ChartType="ChartType.Line" Height="150px" Width="150px"/>
                </MudContainer>
                <MudContainer>

                </MudContainer>
            </MudCardContent>
            <MudCardActions >
                <MudToolBar Style="justify-content:space-evenly; display:flex; gap:10px; width: 100%;">
                    <MudContainer>
                        <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary">Order</MudButton>
                    </MudContainer>
                    <MudContainer Style="justify-content:flex-end; display:flex; gap:10px">
                        <MudButton Variant="MudBlazor.Variant.Filled"
                                    @onclick=@(()=>EditItem(product.Item))
                            Color="Color.Primary">Modify</MudButton>
                        <MudButton Variant="MudBlazor.Variant.Filled" 
                            Color="Color.Secondary">Mark as Inactive</MudButton>
                    </MudContainer>
                </MudToolBar>
                        
            </MudCardActions>
        </MudCard>
    </ChildRowContent>
</MudDataGrid>
</MudPaper>

@code{
    private async Task EditItem(Inventory item)
    {
        await DialogService.ShowAsync<EditProduct>("Modify", new DialogParameters<EditProduct>{{x => x.Product, item}});
    }
}